"""Ajout d'une table d'élection qui vient remplacer la colonne parfois null de organe relation

Revision ID: 28c40534a218
Revises: 70bd9d441567
Create Date: 2025-06-23 14:53:38.334442

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '28c40534a218'
down_revision: Union[str, None] = '70bd9d441567'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('election',
    sa.Column('id_election', sa.Integer(), autoincrement=True, nullable=False, comment="La clef primaire qui est aussi la clef mongo pour l'ensemble des informations"),
    sa.Column('organe_id', sa.String(), nullable=True),
    sa.Column('nom_complet', sa.String(), nullable=True, comment='Le nom obtenu en concatenant le numero de circonscription et le département'),
    sa.Column('date_election', sa.Date(), nullable=True, comment="La date de l'élection"),
    sa.Column('nbr_inscrit', sa.Integer(), nullable=True, comment="Le nombre d'inscrit"),
    sa.Column('nbr_votant', sa.Integer(), nullable=True, comment='Le nombre de personne qui ont voté'),
    sa.Column('nbr_blancs', sa.Integer(), nullable=True, comment='Le nombre de vote blanc'),
    sa.Column('gagnant_id', sa.String(), nullable=True, comment="La clef étrangere vers l'homme politique qui a gagner cette election"),
    sa.Column('gagnant_voix', sa.Integer(), nullable=True, comment="Le nombre de voix obtenu par le gagnant de l'election"),
    sa.Column('runnerup_name', sa.String(), nullable=True, comment="A default d'avoir l'id on précise le nom du candidat arriver en deuxieme"),
    sa.Column('runnerup_voix', sa.Integer(), nullable=True, comment='Le nombre de voix obtenu par le deuxieme candidat'),
    sa.ForeignKeyConstraint(['gagnant_id'], ['hommepolitique.hopol_id'], ),
    sa.ForeignKeyConstraint(['organe_id'], ['organe.organe_id'], ),
    sa.PrimaryKeyConstraint('id_election')
    )
    op.drop_column('organe_relation', 'access_id')
    op.drop_column('organe_relation', 'access_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('organe_relation', sa.Column('access_type', sa.VARCHAR(), autoincrement=False, nullable=True, comment='De quel facon il a acceder a cette organe'))
    op.add_column('organe_relation', sa.Column('access_id', sa.VARCHAR(), autoincrement=False, nullable=True, comment="Une clef vers l'information d'acces au poste dans une base mongoDB"))
    op.drop_table('election')
    # ### end Alembic commands ###
